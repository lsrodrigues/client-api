# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Heroku Container Registry login
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login
      - name: Build and push
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:push -a teste-lucas-deploy web
      - name: Release
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release -a teste-lucas-deploy web

#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v3
#    - name: Set up JDK 11
#      uses: actions/setup-java@v3
#      with:
#        java-version: '11'
#        distribution: 'temurin'
#        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
#        settings-path: ${{ github.workspace }} # location for the settings.xml file

#    - name: Build with Maven
#      run: mvn -B package --file pom.xml

#    - uses: actions/checkout@v2
#    - name: Set up JDK 11
#    - uses: actions/checkout@v3
#    - uses: actions/setup-java@v3
#      with:
#        java-version: '11'
#        distribution: 'temurin'
#    - name: Build and push Docker to Heroku
#    - uses: actions/checkout@v2
#    - name: Build and push Docker to Heroku
#      uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
#      with:
#        heroku_api_key: ${{secrets.HEROKU_API_KEY}}
#        heroku_app_name: "teste-lucas-deploy" #Must be unique in Heroku
#        heroku_email: ${{secrets.HEROKU_EMAIL}}
#        usedocker: true
#jobs:
#  app1:
#    name: Build and deploy Shiny app
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Build and push Docker to Heroku
#        env:
#          HEROKU_APP_NAME: teste-lucas-deploy
#          DOCKERFILE_DIRECTORY: "."
#          HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
#          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
#          DOCKERFILE_NAME: "Dockerfile"
#          DOCKER_OPTIONS: "--no-cache"
#        run: |
#          cd ${DOCKERFILE_DIRECTORY}
#          echo ${HEROKU_API_KEY} | docker login \
#            --username=${HEROKU_EMAIL} \
#            registry.heroku.com \
#            --password-stdin
#          docker build \
#            --file ${DOCKERFILE_NAME} \
#            ${DOCKER_OPTIONS} \
#            --tag registry.heroku.com/${HEROKU_APP_NAME}/web .
#          heroku container:push web --app ${HEROKU_APP_NAME}
#          heroku container:release web --app ${HEROKU_APP_NAME}

